{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\food_app\\\\src\\\\components\\\\Layout\\\\HeaderCartButton.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport CartContext from \"../../store/cart-context\";\nimport CartIcon from \"../Cart/CartIcon\";\nimport classes from \"./HeaderCartButton.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HeaderCartButton = props => {\n  _s();\n\n  const [btnIsHighlighted, setBtnIsHighlighted] = useState;\n  const cartCtx = useContext(CartContext); //the HeaderCartNutton Component will be re-evaluated whenever the context changes\n  // and it will be change by usign CartProvider component\n  // const numberOfCartItems = cartCtx.items.length;  I don't want to add every item as a new entry in that list\n\n  const numberOfCartItems = cartCtx.items.reduce((currNumber, item) => {\n    //I want to add one item in the cart but set the amount for items\n    return currNumber + item.amount; //reduce is a built in method which allows us to transform the array of data into a single value\n  }, 0); //currNumber will be different for every item it is calling\n\n  const btnClasses = `${classes.button} ${classes.bump}`;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: btnClasses,\n    onClick: props.onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.icon,\n      children: /*#__PURE__*/_jsxDEV(CartIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.badge,\n      children: numberOfCartItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HeaderCartButton, \"5vyuBAd9ctzs1tCKQUMcCu/LGtk=\");\n\n_c = HeaderCartButton;\nexport default HeaderCartButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderCartButton\");","map":{"version":3,"names":["useContext","useState","CartContext","CartIcon","classes","HeaderCartButton","props","btnIsHighlighted","setBtnIsHighlighted","cartCtx","numberOfCartItems","items","reduce","currNumber","item","amount","btnClasses","button","bump","onClick","icon","badge"],"sources":["D:/React Projects/food_app/src/components/Layout/HeaderCartButton.js"],"sourcesContent":["import { useContext, useState } from \"react\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport CartIcon from \"../Cart/CartIcon\";\r\nimport classes from \"./HeaderCartButton.module.css\";\r\n\r\nconst HeaderCartButton = (props) => {\r\n\r\n  const[btnIsHighlighted,setBtnIsHighlighted]=useState\r\n  const cartCtx = useContext(CartContext);  //the HeaderCartNutton Component will be re-evaluated whenever the context changes\r\n                                           // and it will be change by usign CartProvider component\r\n\r\n  // const numberOfCartItems = cartCtx.items.length;  I don't want to add every item as a new entry in that list\r\n  const numberOfCartItems = cartCtx.items.reduce((currNumber, item) => {    //I want to add one item in the cart but set the amount for items\r\n    return currNumber + item.amount;  //reduce is a built in method which allows us to transform the array of data into a single value\r\n  }, 0);    //currNumber will be different for every item it is calling\r\n\r\n  const btnClasses = `${classes.button} ${classes.bump}`;\r\n\r\n  return (\r\n    <button className={btnClasses} onClick={props.onClick}>\r\n      <span className={classes.icon}>\r\n        <CartIcon />\r\n      </span>\r\n      <span>Your Cart</span>\r\n      <span className={classes.badge}>{numberOfCartItems}</span> \r\n    </button>\r\n  );\r\n};\r\n\r\nexport default HeaderCartButton;\r\n"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,+BAApB;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;EAAA;;EAElC,MAAK,CAACC,gBAAD,EAAkBC,mBAAlB,IAAuCP,QAA5C;EACA,MAAMQ,OAAO,GAAGT,UAAU,CAACE,WAAD,CAA1B,CAHkC,CAGQ;EACD;EAEzC;;EACA,MAAMQ,iBAAiB,GAAGD,OAAO,CAACE,KAAR,CAAcC,MAAd,CAAqB,CAACC,UAAD,EAAaC,IAAb,KAAsB;IAAK;IACxE,OAAOD,UAAU,GAAGC,IAAI,CAACC,MAAzB,CADmE,CACjC;EACnC,CAFyB,EAEvB,CAFuB,CAA1B,CAPkC,CASxB;;EAEV,MAAMC,UAAU,GAAI,GAAEZ,OAAO,CAACa,MAAO,IAAGb,OAAO,CAACc,IAAK,EAArD;EAEA,oBACE;IAAQ,SAAS,EAAEF,UAAnB;IAA+B,OAAO,EAAEV,KAAK,CAACa,OAA9C;IAAA,wBACE;MAAM,SAAS,EAAEf,OAAO,CAACgB,IAAzB;MAAA,uBACE,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAM,SAAS,EAAEhB,OAAO,CAACiB,KAAzB;MAAA,UAAiCX;IAAjC;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAtBD;;GAAML,gB;;KAAAA,gB;AAwBN,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}